/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.22.2
// source: sale.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var user_pb = require('./user_pb.js')
const proto = {};
proto.proto = require('./sale_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.SaleServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.SaleServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.SaleCreateRequest,
 *   !proto.proto.SaleCreateResponse>}
 */
const methodDescriptor_SaleService_Create = new grpc.web.MethodDescriptor(
  '/proto.SaleService/Create',
  grpc.web.MethodType.UNARY,
  proto.proto.SaleCreateRequest,
  proto.proto.SaleCreateResponse,
  /**
   * @param {!proto.proto.SaleCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.SaleCreateResponse.deserializeBinary
);


/**
 * @param {!proto.proto.SaleCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.SaleCreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.SaleCreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.SaleServiceClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.SaleService/Create',
      request,
      metadata || {},
      methodDescriptor_SaleService_Create,
      callback);
};


/**
 * @param {!proto.proto.SaleCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.SaleCreateResponse>}
 *     Promise that resolves to the response
 */
proto.proto.SaleServicePromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.SaleService/Create',
      request,
      metadata || {},
      methodDescriptor_SaleService_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.SaleGetRequest,
 *   !proto.proto.SaleGetResponse>}
 */
const methodDescriptor_SaleService_Get = new grpc.web.MethodDescriptor(
  '/proto.SaleService/Get',
  grpc.web.MethodType.UNARY,
  proto.proto.SaleGetRequest,
  proto.proto.SaleGetResponse,
  /**
   * @param {!proto.proto.SaleGetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.SaleGetResponse.deserializeBinary
);


/**
 * @param {!proto.proto.SaleGetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.SaleGetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.SaleGetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.SaleServiceClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.SaleService/Get',
      request,
      metadata || {},
      methodDescriptor_SaleService_Get,
      callback);
};


/**
 * @param {!proto.proto.SaleGetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.SaleGetResponse>}
 *     Promise that resolves to the response
 */
proto.proto.SaleServicePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.SaleService/Get',
      request,
      metadata || {},
      methodDescriptor_SaleService_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.SaleListRequest,
 *   !proto.proto.SaleListResponse>}
 */
const methodDescriptor_SaleService_List = new grpc.web.MethodDescriptor(
  '/proto.SaleService/List',
  grpc.web.MethodType.UNARY,
  proto.proto.SaleListRequest,
  proto.proto.SaleListResponse,
  /**
   * @param {!proto.proto.SaleListRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.SaleListResponse.deserializeBinary
);


/**
 * @param {!proto.proto.SaleListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.SaleListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.SaleListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.SaleServiceClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.SaleService/List',
      request,
      metadata || {},
      methodDescriptor_SaleService_List,
      callback);
};


/**
 * @param {!proto.proto.SaleListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.SaleListResponse>}
 *     Promise that resolves to the response
 */
proto.proto.SaleServicePromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.SaleService/List',
      request,
      metadata || {},
      methodDescriptor_SaleService_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.SaleUpdateRequest,
 *   !proto.proto.SaleUpdateResponse>}
 */
const methodDescriptor_SaleService_Update = new grpc.web.MethodDescriptor(
  '/proto.SaleService/Update',
  grpc.web.MethodType.UNARY,
  proto.proto.SaleUpdateRequest,
  proto.proto.SaleUpdateResponse,
  /**
   * @param {!proto.proto.SaleUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.SaleUpdateResponse.deserializeBinary
);


/**
 * @param {!proto.proto.SaleUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.SaleUpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.SaleUpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.SaleServiceClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.SaleService/Update',
      request,
      metadata || {},
      methodDescriptor_SaleService_Update,
      callback);
};


/**
 * @param {!proto.proto.SaleUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.SaleUpdateResponse>}
 *     Promise that resolves to the response
 */
proto.proto.SaleServicePromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.SaleService/Update',
      request,
      metadata || {},
      methodDescriptor_SaleService_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.SaleDeleteRequest,
 *   !proto.proto.SaleDeleteResponse>}
 */
const methodDescriptor_SaleService_Delete = new grpc.web.MethodDescriptor(
  '/proto.SaleService/Delete',
  grpc.web.MethodType.UNARY,
  proto.proto.SaleDeleteRequest,
  proto.proto.SaleDeleteResponse,
  /**
   * @param {!proto.proto.SaleDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.SaleDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.proto.SaleDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.SaleDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.SaleDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.SaleServiceClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.SaleService/Delete',
      request,
      metadata || {},
      methodDescriptor_SaleService_Delete,
      callback);
};


/**
 * @param {!proto.proto.SaleDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.SaleDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.proto.SaleServicePromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.SaleService/Delete',
      request,
      metadata || {},
      methodDescriptor_SaleService_Delete);
};


module.exports = proto.proto;

