/**
 * @fileoverview gRPC-Web generated client stub for proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.22.2
// source: category.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.proto = require('./category_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.CategoryServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.proto.CategoryServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.CategoryCreateRequest,
 *   !proto.proto.CategoryCreateResponse>}
 */
const methodDescriptor_CategoryService_Create = new grpc.web.MethodDescriptor(
  '/proto.CategoryService/Create',
  grpc.web.MethodType.UNARY,
  proto.proto.CategoryCreateRequest,
  proto.proto.CategoryCreateResponse,
  /**
   * @param {!proto.proto.CategoryCreateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.CategoryCreateResponse.deserializeBinary
);


/**
 * @param {!proto.proto.CategoryCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.CategoryCreateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.CategoryCreateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.CategoryServiceClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.CategoryService/Create',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Create,
      callback);
};


/**
 * @param {!proto.proto.CategoryCreateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.CategoryCreateResponse>}
 *     Promise that resolves to the response
 */
proto.proto.CategoryServicePromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.CategoryService/Create',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.CategoryUpdateRequest,
 *   !proto.proto.CategoryUpdateResponse>}
 */
const methodDescriptor_CategoryService_Update = new grpc.web.MethodDescriptor(
  '/proto.CategoryService/Update',
  grpc.web.MethodType.UNARY,
  proto.proto.CategoryUpdateRequest,
  proto.proto.CategoryUpdateResponse,
  /**
   * @param {!proto.proto.CategoryUpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.CategoryUpdateResponse.deserializeBinary
);


/**
 * @param {!proto.proto.CategoryUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.CategoryUpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.CategoryUpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.CategoryServiceClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.CategoryService/Update',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Update,
      callback);
};


/**
 * @param {!proto.proto.CategoryUpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.CategoryUpdateResponse>}
 *     Promise that resolves to the response
 */
proto.proto.CategoryServicePromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.CategoryService/Update',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.CategoryDeleteRequest,
 *   !proto.proto.CategoryDeleteResponse>}
 */
const methodDescriptor_CategoryService_Delete = new grpc.web.MethodDescriptor(
  '/proto.CategoryService/Delete',
  grpc.web.MethodType.UNARY,
  proto.proto.CategoryDeleteRequest,
  proto.proto.CategoryDeleteResponse,
  /**
   * @param {!proto.proto.CategoryDeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.CategoryDeleteResponse.deserializeBinary
);


/**
 * @param {!proto.proto.CategoryDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.CategoryDeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.CategoryDeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.CategoryServiceClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.CategoryService/Delete',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Delete,
      callback);
};


/**
 * @param {!proto.proto.CategoryDeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.CategoryDeleteResponse>}
 *     Promise that resolves to the response
 */
proto.proto.CategoryServicePromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.CategoryService/Delete',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.CategoryGetRequest,
 *   !proto.proto.CategoryGetResponse>}
 */
const methodDescriptor_CategoryService_Get = new grpc.web.MethodDescriptor(
  '/proto.CategoryService/Get',
  grpc.web.MethodType.UNARY,
  proto.proto.CategoryGetRequest,
  proto.proto.CategoryGetResponse,
  /**
   * @param {!proto.proto.CategoryGetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.CategoryGetResponse.deserializeBinary
);


/**
 * @param {!proto.proto.CategoryGetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.CategoryGetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.CategoryGetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.CategoryServiceClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.CategoryService/Get',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Get,
      callback);
};


/**
 * @param {!proto.proto.CategoryGetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.CategoryGetResponse>}
 *     Promise that resolves to the response
 */
proto.proto.CategoryServicePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.CategoryService/Get',
      request,
      metadata || {},
      methodDescriptor_CategoryService_Get);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.proto.CategoryListRequest,
 *   !proto.proto.CategoryListResponse>}
 */
const methodDescriptor_CategoryService_List = new grpc.web.MethodDescriptor(
  '/proto.CategoryService/List',
  grpc.web.MethodType.UNARY,
  proto.proto.CategoryListRequest,
  proto.proto.CategoryListResponse,
  /**
   * @param {!proto.proto.CategoryListRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.proto.CategoryListResponse.deserializeBinary
);


/**
 * @param {!proto.proto.CategoryListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.proto.CategoryListResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.proto.CategoryListResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.proto.CategoryServiceClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/proto.CategoryService/List',
      request,
      metadata || {},
      methodDescriptor_CategoryService_List,
      callback);
};


/**
 * @param {!proto.proto.CategoryListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.proto.CategoryListResponse>}
 *     Promise that resolves to the response
 */
proto.proto.CategoryServicePromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/proto.CategoryService/List',
      request,
      metadata || {},
      methodDescriptor_CategoryService_List);
};


module.exports = proto.proto;

